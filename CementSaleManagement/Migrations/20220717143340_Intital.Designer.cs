// <auto-generated />
using System;
using CementSaleManagement.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CementSaleManagement.Migrations
{
    [DbContext(typeof(CementSaleManagementDbContext))]
    [Migration("20220717143340_Intital")]
    partial class Intital
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.12");

            modelBuilder.Entity("CementSaleManagement.Entities.CustomerMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Address1")
                        .HasColumnType("TEXT");

                    b.Property<string>("Address2")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .HasColumnType("TEXT");

                    b.Property<string>("Phone")
                        .HasColumnType("TEXT");

                    b.Property<int>("UserMasterId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("UserMasterId");

                    b.ToTable("CustomerMasters");
                });

            modelBuilder.Entity("CementSaleManagement.Entities.OrderCancellationMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CancelDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("OrderMasterId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("OrderMasterId");

                    b.ToTable("OrderCancellationMasters");
                });

            modelBuilder.Entity("CementSaleManagement.Entities.OrderDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Amount")
                        .HasColumnType("TEXT");

                    b.Property<int>("Count")
                        .HasColumnType("INTEGER");

                    b.Property<int>("OrderMasterId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ProductMasterId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("OrderMasterId");

                    b.HasIndex("ProductMasterId");

                    b.ToTable("OrderDetails");
                });

            modelBuilder.Entity("CementSaleManagement.Entities.OrderMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Amount")
                        .HasColumnType("TEXT");

                    b.Property<int>("CustomerMasterId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ItemCount")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CustomerMasterId");

                    b.ToTable("OrderMasters");
                });

            modelBuilder.Entity("CementSaleManagement.Entities.ProductMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CompanyName")
                        .HasColumnType("TEXT");

                    b.Property<string>("ProductName")
                        .HasColumnType("TEXT");

                    b.Property<int>("SupplierMasterId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("SupplierMasterId");

                    b.ToTable("ProductMasters");
                });

            modelBuilder.Entity("CementSaleManagement.Entities.PruchaseDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Amount")
                        .HasColumnType("TEXT");

                    b.Property<int>("Count")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ProductMasterId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PurchaseMasterId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ProductMasterId");

                    b.HasIndex("PurchaseMasterId");

                    b.ToTable("PruchaseDetails");
                });

            modelBuilder.Entity("CementSaleManagement.Entities.PurchaseCancellationMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CancelDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("PurchaseMasterId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("PurchaseMasterId");

                    b.ToTable("PurchaseCancellationMasters");
                });

            modelBuilder.Entity("CementSaleManagement.Entities.PurchaseMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Amount")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ItemCount")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("PurchaseDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("SupplierMasterId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("SupplierMasterId");

                    b.ToTable("PurchaseMasters");
                });

            modelBuilder.Entity("CementSaleManagement.Entities.RoleMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("RoleMasters");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Worker"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Supplier"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Customer"
                        });
                });

            modelBuilder.Entity("CementSaleManagement.Entities.SupplierMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Address1")
                        .HasColumnType("TEXT");

                    b.Property<string>("Address2")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<string>("Phone")
                        .HasColumnType("TEXT");

                    b.Property<string>("SupplierName")
                        .HasColumnType("TEXT");

                    b.Property<int>("UserMasterId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("UserMasterId");

                    b.ToTable("SupplierMasters");
                });

            modelBuilder.Entity("CementSaleManagement.Entities.UserMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .HasColumnType("TEXT");

                    b.Property<string>("Phone")
                        .HasColumnType("TEXT");

                    b.Property<int>("RoleId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("UserMasters");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "admin@admin.com",
                            FirstName = "Admin",
                            LastName = "Admin",
                            Phone = "7898765467",
                            RoleId = 1
                        });
                });

            modelBuilder.Entity("CementSaleManagement.Entities.WorkerMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Address1")
                        .HasColumnType("TEXT");

                    b.Property<string>("Address2")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateOfJoining")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Dob")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .HasColumnType("TEXT");

                    b.Property<string>("MiddleName")
                        .HasColumnType("TEXT");

                    b.Property<string>("Phone")
                        .HasColumnType("TEXT");

                    b.Property<int>("UserMasterId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("UserMasterId");

                    b.ToTable("WorkerMasters");
                });

            modelBuilder.Entity("CementSaleManagement.Entities.CustomerMaster", b =>
                {
                    b.HasOne("CementSaleManagement.Entities.UserMaster", "UserMaster")
                        .WithMany()
                        .HasForeignKey("UserMasterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserMaster");
                });

            modelBuilder.Entity("CementSaleManagement.Entities.OrderCancellationMaster", b =>
                {
                    b.HasOne("CementSaleManagement.Entities.OrderMaster", "OrderMaster")
                        .WithMany()
                        .HasForeignKey("OrderMasterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OrderMaster");
                });

            modelBuilder.Entity("CementSaleManagement.Entities.OrderDetail", b =>
                {
                    b.HasOne("CementSaleManagement.Entities.OrderMaster", "OrderMaster")
                        .WithMany()
                        .HasForeignKey("OrderMasterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CementSaleManagement.Entities.ProductMaster", "ProductMaster")
                        .WithMany()
                        .HasForeignKey("ProductMasterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OrderMaster");

                    b.Navigation("ProductMaster");
                });

            modelBuilder.Entity("CementSaleManagement.Entities.OrderMaster", b =>
                {
                    b.HasOne("CementSaleManagement.Entities.CustomerMaster", "CustomerMaster")
                        .WithMany()
                        .HasForeignKey("CustomerMasterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CustomerMaster");
                });

            modelBuilder.Entity("CementSaleManagement.Entities.ProductMaster", b =>
                {
                    b.HasOne("CementSaleManagement.Entities.SupplierMaster", "SupplierMaster")
                        .WithMany()
                        .HasForeignKey("SupplierMasterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SupplierMaster");
                });

            modelBuilder.Entity("CementSaleManagement.Entities.PruchaseDetail", b =>
                {
                    b.HasOne("CementSaleManagement.Entities.ProductMaster", "ProductMaster")
                        .WithMany()
                        .HasForeignKey("ProductMasterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CementSaleManagement.Entities.PurchaseMaster", "PurchaseMaster")
                        .WithMany()
                        .HasForeignKey("PurchaseMasterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProductMaster");

                    b.Navigation("PurchaseMaster");
                });

            modelBuilder.Entity("CementSaleManagement.Entities.PurchaseCancellationMaster", b =>
                {
                    b.HasOne("CementSaleManagement.Entities.PurchaseMaster", "PurchaseMaster")
                        .WithMany()
                        .HasForeignKey("PurchaseMasterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PurchaseMaster");
                });

            modelBuilder.Entity("CementSaleManagement.Entities.PurchaseMaster", b =>
                {
                    b.HasOne("CementSaleManagement.Entities.SupplierMaster", "SupplierMaster")
                        .WithMany()
                        .HasForeignKey("SupplierMasterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SupplierMaster");
                });

            modelBuilder.Entity("CementSaleManagement.Entities.SupplierMaster", b =>
                {
                    b.HasOne("CementSaleManagement.Entities.UserMaster", "UserMaster")
                        .WithMany()
                        .HasForeignKey("UserMasterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserMaster");
                });

            modelBuilder.Entity("CementSaleManagement.Entities.UserMaster", b =>
                {
                    b.HasOne("CementSaleManagement.Entities.RoleMaster", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("CementSaleManagement.Entities.WorkerMaster", b =>
                {
                    b.HasOne("CementSaleManagement.Entities.UserMaster", "UserMaster")
                        .WithMany()
                        .HasForeignKey("UserMasterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserMaster");
                });
#pragma warning restore 612, 618
        }
    }
}
